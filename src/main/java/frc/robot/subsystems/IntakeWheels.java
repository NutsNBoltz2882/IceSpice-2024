package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.wpilibj2.command.button.CommandXboxController;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.revrobotics.CANSparkLowLevel.MotorType;

/**
 *
 */
public class IntakeWheels extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    public static final double WheelSpeed = 0.0; // Adjusted data type to double
    public boolean areWheelsSpinning;
    public boolean functionRunning = false; // Changed Boolean to boolean
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private CANSparkMax wheels;
    private CommandXboxController ttrig;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public IntakeWheels(CommandXboxController trig) {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        wheels = new CANSparkMax(11, MotorType.kBrushless); // Specified motor type
        //addChild("Belt", wheels);
        wheels.setInverted(false);
        ttrig = trig;
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run
    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public boolean areWheelsSpinning() {
        return areWheelsSpinning;
    }

    public void spinWheels() { // Corrected method name from spinWeheels to spinWheels
        wheels.setVoltage(ttrig.getLeftTriggerAxis()*12);
    }
    public void switchDirection(boolean sw){
        wheels.setInverted(sw);
    }
    public void spin(){
        
        wheels.setVoltage(6.0);
       
        
    }
}
